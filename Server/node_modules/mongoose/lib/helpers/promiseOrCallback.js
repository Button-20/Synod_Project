'use strict';

const PromiseProvider = require('../promise_provider');

const emittedSymbol = Symbol.for('mongoose:emitted');

<<<<<<< HEAD
module.exports = function promiseOrCallback(callback, fn, ee) {
  if (typeof callback === 'function') {
    return fn(function(error) {
      if (error != null) {
        if (ee != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {
=======
module.exports = function promiseOrCallback(callback, fn, ee, Promise) {
  if (typeof callback === 'function') {
    return fn(function(error) {
      if (error != null) {
        if (ee != null && ee.listeners != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {
>>>>>>> fc88cec46f97d1863f4c718c87b713ceed9718ad
          error[emittedSymbol] = true;
          ee.emit('error', error);
        }
        try {
          callback(error);
        } catch (error) {
          return process.nextTick(() => {
            throw error;
          });
        }
        return;
      }
      callback.apply(this, arguments);
    });
  }

<<<<<<< HEAD
  const Promise = PromiseProvider.get();
=======
  Promise = Promise || PromiseProvider.get();
>>>>>>> fc88cec46f97d1863f4c718c87b713ceed9718ad

  return new Promise((resolve, reject) => {
    fn(function(error, res) {
      if (error != null) {
<<<<<<< HEAD
        if (ee != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {
=======
        if (ee != null && ee.listeners != null && ee.listeners('error').length > 0 && !error[emittedSymbol]) {
>>>>>>> fc88cec46f97d1863f4c718c87b713ceed9718ad
          error[emittedSymbol] = true;
          ee.emit('error', error);
        }
        return reject(error);
      }
      if (arguments.length > 2) {
        return resolve(Array.prototype.slice.call(arguments, 1));
      }
      resolve(res);
    });
  });
<<<<<<< HEAD
};
=======
};
>>>>>>> fc88cec46f97d1863f4c718c87b713ceed9718ad
